From cb87c0b5322329369f41ee8e04d1a4281ce6a857 Mon Sep 17 00:00:00 2001
From: eduardruzga <wonderwhy.er@gmail.com>
Date: Wed, 16 Oct 2024 12:32:01 +0300
Subject: [PATCH] Add ability to export project as zip file

---
 app/components/chat/Chat.client.tsx | 10 ++++++++++
 app/lib/stores/workbench.ts         | 20 ++++++++++++++++++++
 package.json                        |  4 ++++
 3 files changed, 34 insertions(+)

diff --git a/app/components/chat/Chat.client.tsx b/app/components/chat/Chat.client.tsx
index dff7598e..49033a63 100644
--- a/app/components/chat/Chat.client.tsx
+++ b/app/components/chat/Chat.client.tsx
@@ -25,6 +25,8 @@ export function Chat() {
 
   const { ready, initialMessages, storeMessageHistory } = useChatHistory();
 
+
+
   return (
     <>
       {ready && <ChatImpl initialMessages={initialMessages} storeMessageHistory={storeMessageHistory} />}
@@ -118,6 +120,11 @@ export const ChatImpl = memo(({ initialMessages, storeMessageHistory }: ChatProp
     workbenchStore.abortAllActions();
   };
 
+  const handleExport = () => {
+    console.log('handle export');
+    workbenchStore.exportProjectAsZip();
+  };
+
   useEffect(() => {
     const textarea = textareaRef.current;
 
@@ -199,6 +206,8 @@ export const ChatImpl = memo(({ initialMessages, storeMessageHistory }: ChatProp
   const [messageRef, scrollRef] = useSnapScroll();
 
   return (
+    <>
+      <button onClick={handleExport}>Export</button>
     <BaseChat
       ref={animationScope}
       textareaRef={textareaRef}
@@ -230,5 +239,6 @@ export const ChatImpl = memo(({ initialMessages, storeMessageHistory }: ChatProp
         });
       }}
     />
+      </>
   );
 });
diff --git a/app/lib/stores/workbench.ts b/app/lib/stores/workbench.ts
index 4040de11..6f51340a 100644
--- a/app/lib/stores/workbench.ts
+++ b/app/lib/stores/workbench.ts
@@ -9,6 +9,8 @@ import { EditorStore } from './editor';
 import { FilesStore, type FileMap } from './files';
 import { PreviewsStore } from './previews';
 import { TerminalStore } from './terminal';
+import JSZip from 'jszip';
+import { saveAs } from 'file-saver';
 
 export interface ArtifactState {
   id: string;
@@ -267,6 +269,24 @@ export class WorkbenchStore {
     artifact.runner.runAction(data);
   }
 
+  async exportProjectAsZip() {
+    const zip = new JSZip();
+    const files = this.files.get();
+
+    // Ensure all files are saved before exporting
+    await this.saveAllFiles();
+
+    for (const [filePath, dirent] of Object.entries(files)) {
+      if (dirent?.type === 'file' && !dirent.isBinary) {
+        zip.file(filePath, dirent.content);
+      }
+    }
+
+    const zipBlob = await zip.generateAsync({ type: 'blob' });
+    console.log(zipBlob);
+    saveAs(zipBlob, 'project.zip');
+  }
+
   #getArtifact(id: string) {
     const artifacts = this.artifacts.get();
     return artifacts[id];
diff --git a/package.json b/package.json
index b09ff028..58157389 100644
--- a/package.json
+++ b/package.json
@@ -50,15 +50,18 @@
     "@remix-run/cloudflare": "^2.10.2",
     "@remix-run/cloudflare-pages": "^2.10.2",
     "@remix-run/react": "^2.10.2",
+    "@types/file-saver": "^2.0.7",
     "@uiw/codemirror-theme-vscode": "^4.23.0",
     "@unocss/reset": "^0.61.0",
     "@webcontainer/api": "1.3.0-internal.10",
     "@xterm/addon-fit": "^0.10.0",
     "@xterm/addon-web-links": "^0.11.0",
     "@xterm/xterm": "^5.5.0",
+    "@zip.js/zip.js": "^2.7.52",
     "ai": "^3.3.4",
     "date-fns": "^3.6.0",
     "diff": "^5.2.0",
+    "file-saver": "^2.0.5",
     "framer-motion": "^11.2.12",
     "isbot": "^4.1.0",
     "istextorbinary": "^9.5.0",
@@ -88,6 +91,7 @@
     "@types/react-dom": "^18.2.7",
     "fast-glob": "^3.3.2",
     "is-ci": "^3.0.1",
+    "jszip": "^3.10.1",
     "node-fetch": "^3.3.2",
     "prettier": "^3.3.2",
     "sass-embedded": "^1.79.5",
